// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.20'
    ext.arouter_register_version = '1.0.2'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        jcenter()
//        maven { url 'https://maven.google.com' }
        maven { url 'https://jitpack.io' }//添加jitpack仓库地址
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases/"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/snapshots"
        }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter'}

        maven { url 'https://dl.bintray.com/umsdk/release' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "com.alibaba:arouter-register:$arouter_register_version"

        classpath "com.github.ben-manes:gradle-versions-plugin:0.36.0"
        //Gradle 检查依赖更新命令 : gradlew dependencyUpdates
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
        options.encoding = 'UTF-8'
    }
}

/**
 * 如果在多项目构建中，可能想把插件应用到子项目中，apply false 来告诉 Gradle 不要应用插件
 *
 * plugins {} 默认的行为是解析和应用插件
 */
plugins {
    // 这个 id 就是在 versionPlugin 文件夹下 build.gradle 文件内定义的id
    id "com.fjsy.plugin" apply false
}

apply from: './checkVersions.gradle'

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        jcenter()
//        maven { url 'https://maven.google.com' }
        maven { url 'https://jitpack.io' }//添加jitpack仓库地址
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases/"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/snapshots"
        }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter'}
        flatDir { dirs 'libs' }
        maven { url 'https://dl.bintray.com/umsdk/release' }
    }
}

subprojects { subproject ->
    // 默认应用所有子项目中
    apply plugin: 'com.fjsy.plugin'

    // 如果想应用到某个子项目中，可以通过 subproject.name 来判断应用在哪个子项目中
    // subproject.name 是你子项目的名字，示例如下
    // 官方文档地址：https://guides.gradle.org/creating-multi-project-builds/#add_documentation
    if (subproject.name == "app") {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "clan_home" && isModuleHome.toBoolean()) {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "clan_chat" && isModuleChat.toBoolean()) {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-android-extensions'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "clan_clan" && isModuleClan.toBoolean()) {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "clan_find" && isModuleFind.toBoolean()) {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "clan_mine" && isModuleMine.toBoolean()) {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
    } else if (subproject.name == "VersionPlugin") {

    } else if (subproject.name == "mars-core-release") {

    } else {
        apply plugin: 'com.android.library'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}